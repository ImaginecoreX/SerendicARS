package icx.application.main.sub.passenger;

import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.FlatDarkLaf;
import icx.model.Passenger;
import icx.service.impl.PassengerSeviceIMPL;
import icx.table.TableContentCenterCellRenderer;
import icx.util.ImageScaler;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

/**
 *
 * @author ksoff
 */
public class ManagePassenger extends javax.swing.JDialog {

    private JPanel parent;
    private PassengerSeviceIMPL passengerSeviceIMPL = new PassengerSeviceIMPL();
    private Passenger passenger;
    // private TicketManagement ticketManagement; // use this to parse data from this model to ticketManagement on selecting passenger to issue a ticket // use setTicketManagement(ticketManagement); on parent panel

    // public void setTicketManagement(TicketManagement ticketManagement) {
    //     this.ticketManagement = ticketManagement;
    // }
    /**
     * Creates new form AddPassenger
     */
    public ManagePassenger(javax.swing.JPanel parent) {
        this.parent = parent;
        initComponents();
        init();
    }

    private void init() {
        styleComponents();
        new TableContentCenterCellRenderer().renderTable(passengerTable);

        loadPassengerStatus();

        //passengerContainer.setVisible(false);
        hidePassengerTable();
    }

    private void styleComponents() {
        searchField.putClientProperty(FlatClientProperties.STYLE, "arc:30");
        searchField.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Search Passenger by Passport");
        searchField.putClientProperty("JTextField.leadingIcon", new ImageScaler().getSvgIcon("icx/icon/svg/search.svg", 24, 24));
    }

    // Resets Passenger Fields
    private void reset() {
        JTextField[] fields = {fnameField, lnameField, passportField};
        for (JTextField field : fields) {
            field.setText("");
        }
        statusComboBox.setSelectedIndex(0);
    }

    private void loadPassengerStatus() {
        passengerSeviceIMPL.loadPassengerStatus(statusComboBox);
    }

    /* 
     * UI Updates 
     */
    private void generateCenter() {
        //pack(); // set window to preffered size;
        setLocationRelativeTo(null);
    }

    private void showPassengerTable() {
        Thread thread = new Thread(() -> {
            if (!passengerContainer.isVisible()) {
                passengerContainer.setVisible(true);

                if (this.getHeight() < 450 || this.getHeight() == this.getMinimumSize().height) {
                    this.setSize(this.getWidth(), this.getHeight() + 200);
                    generateCenter();
                }
            }
        });
        thread.start();
    }

    private void hidePassengerTable() {
        Thread thread = new Thread(() -> {
            if (passengerContainer.isVisible()) {
                passengerContainer.setVisible(false);
                this.setSize(this.getWidth(), this.getMinimumSize().height);
                generateCenter();
            }
        });
        thread.start();
    }

    /*
     * Passenger Searching
     */
    private boolean isFound;

    private void loadPassengers(String text) {
        showPassengerTable();

        this.isFound = passengerSeviceIMPL.loadPassengers(text, passengerTable);
    }

    private void fillPassengerFields() {
        Passenger passengerDTO = getPassenger();

        if (passengerDTO != null) {
            fnameField.setText(passengerDTO.getFname());
            lnameField.setText(passengerDTO.getLname());
            passportField.setText(passengerDTO.getPassport());
            statusComboBox.setSelectedItem(passengerDTO.getStatus().toUpperCase());
        }
    }

    /*
     * Ask to Open AddPassenger Modal
     */
    private void askToAddPassenger() {
        int option = JOptionPane.showConfirmDialog(this, "Pasenger did not found. \nDo you want to add this Passenger?", "Not Found", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            openAddPassenger();
        }
    }

    private void openAddPassenger() {
        passengerSeviceIMPL.openAddPassenger(this.parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        searchPanel = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        passengerContainer = new javax.swing.JPanel();
        passengerScroll = new javax.swing.JScrollPane();
        passengerTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        fieldPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        fnameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lnameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        passportField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        statusComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(380, 380));
        setModal(true);

        jPanel1.setPreferredSize(new java.awt.Dimension(755, 300));

        Title.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Passenger");

        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });

        passengerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Passport", "First Name", "Last Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        passengerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passengerTableMouseClicked(evt);
            }
        });
        passengerScroll.setViewportView(passengerTable);
        if (passengerTable.getColumnModel().getColumnCount() > 0) {
            passengerTable.getColumnModel().getColumn(0).setResizable(false);
            passengerTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            passengerTable.getColumnModel().getColumn(1).setResizable(false);
            passengerTable.getColumnModel().getColumn(2).setResizable(false);
            passengerTable.getColumnModel().getColumn(3).setResizable(false);
            passengerTable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout passengerContainerLayout = new javax.swing.GroupLayout(passengerContainer);
        passengerContainer.setLayout(passengerContainerLayout);
        passengerContainerLayout.setHorizontalGroup(
            passengerContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passengerContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(passengerScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                .addContainerGap())
        );
        passengerContainerLayout.setVerticalGroup(
            passengerContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passengerContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(passengerScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setIcon(new ImageScaler().getSvgIcon("icx/icon/svg/refresh.svg", 24, 24)
        );
        jButton1.setText("View All");
        jButton1.setMargin(new java.awt.Insets(2, 2, 3, 2));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(passengerContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(searchField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchField)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passengerContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        updateButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel2.setText("First Name");

        fnameField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel3.setText("Last Name");

        lnameField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel4.setText("Passport");

        passportField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel5.setText("Status");

        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Active", "Inactive" }));

        javax.swing.GroupLayout fieldPanelLayout = new javax.swing.GroupLayout(fieldPanel);
        fieldPanel.setLayout(fieldPanelLayout);
        fieldPanelLayout.setHorizontalGroup(
            fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(40, 40, 40)
                .addGroup(fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passportField)
                    .addComponent(fnameField)
                    .addComponent(lnameField, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                    .addComponent(statusComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        fieldPanelLayout.setVerticalGroup(
            fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passportField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fieldPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // Search Passenger
        String text = searchField.getText();

        if (text.isEmpty()) {
            hidePassengerTable();
        } else {
            loadPassengers(text);
            reset();

            if (evt.getKeyCode() == KeyEvent.VK_ENTER && !isFound) {
                askToAddPassenger();
            }
        }
    }//GEN-LAST:event_searchFieldKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // View All Passengers
        loadPassengers("");
        reset();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void passengerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passengerTableMouseClicked
        // Select Passenger
        int selectedRow = passengerTable.getSelectedRow();

        if (selectedRow != -1) {
            int id = Integer.parseInt(String.valueOf(passengerTable.getValueAt(selectedRow, 0)));
            String passport = String.valueOf(passengerTable.getValueAt(selectedRow, 1));
            String fname = String.valueOf(passengerTable.getValueAt(selectedRow, 2));
            String lname = String.valueOf(passengerTable.getValueAt(selectedRow, 3));
            String status = String.valueOf(passengerTable.getValueAt(selectedRow, 4));

            //Passenger passengerDTO = new Passenger(id, fname, lname, passport, status);
            //setPassenger(passengerDTO);
            setPassenger(new Passenger(id, fname, lname, passport, status));

            if (evt.getClickCount() == 1) {
                // Select to Update
                fillPassengerFields();

            } else if (evt.getClickCount() == 2 && SwingUtilities.isLeftMouseButton(evt)) {
                // Select & Parse to Parent

                // if (this.ticketManagement != null) {
                //     this.ticketManagement.setPassenger(passengerDTO); // Create an instance variable as Passenger passenger; on Parent Panel (ex: TicketManagement). And create a setter for it. 
                // }
            }
        }
    }//GEN-LAST:event_passengerTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // Update Passenger

        String fname = fnameField.getText();
        String lname = lnameField.getText();
        String passport = passportField.getText();
        String status = String.valueOf(statusComboBox.getSelectedItem());;

        Passenger passengerDTO = getPassenger();

        if (fname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter First Name", "Warning: First Name", JOptionPane.WARNING_MESSAGE);
            fnameField.requestFocus();
        } else if (lname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Last Name", "Warning: Last Name", JOptionPane.WARNING_MESSAGE);
            lnameField.requestFocus();
        } else if (passport.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Passport Number", "Warning: Passport Number", JOptionPane.WARNING_MESSAGE);
            passportField.requestFocus();
        } else if (status.toLowerCase().equals("select") || status == null) {
            JOptionPane.showMessageDialog(this, "Please select Status", "Warning: Status", JOptionPane.WARNING_MESSAGE);
            statusComboBox.requestFocus();
        } else {

            passengerDTO.setFname(fname);
            passengerDTO.setLname(lname);
            passengerDTO.setPassport(passport);
            passengerDTO.setStatus(status);

            passengerSeviceIMPL.updatePassenger(passengerDTO, this);
            loadPassengers(searchField.getText());
        }

    }//GEN-LAST:event_updateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatDarkLaf.setup();

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManagePassenger dialog = new ManagePassenger(new javax.swing.JPanel());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JPanel fieldPanel;
    private javax.swing.JTextField fnameField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField lnameField;
    private javax.swing.JPanel passengerContainer;
    private javax.swing.JScrollPane passengerScroll;
    private javax.swing.JTable passengerTable;
    private javax.swing.JTextField passportField;
    private javax.swing.JTextField searchField;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JComboBox<String> statusComboBox;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

    public Passenger getPassenger() {
        return passenger;
    }

    public void setPassenger(Passenger passenger) {
        this.passenger = passenger;
    }
}
